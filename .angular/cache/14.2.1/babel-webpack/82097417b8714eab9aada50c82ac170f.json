{"ast":null,"code":"import { saveAs } from 'file-saver';\nimport { tap, map } from 'rxjs/operators';\nimport { environment } from './../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let FilesService = /*#__PURE__*/(() => {\n  class FilesService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = `${environment.API_URL}/api/files`;\n    }\n\n    getFile(name, url, type) {\n      return this.http.get(url, {\n        responseType: 'blob'\n      }).pipe(tap(content => {\n        const blob = new Blob([content], {\n          type\n        });\n        saveAs(blob, name);\n      }), map(() => true));\n    }\n\n    uploadFile(file) {\n      const dto = new FormData();\n      dto.append('file', file);\n      return this.http.post(`${this.apiUrl}/upload`, dto);\n    }\n\n  }\n\n  FilesService.ɵfac = function FilesService_Factory(t) {\n    return new (t || FilesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  FilesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FilesService,\n    factory: FilesService.ɵfac,\n    providedIn: 'root'\n  });\n  return FilesService;\n})();","map":null,"metadata":{},"sourceType":"module"}