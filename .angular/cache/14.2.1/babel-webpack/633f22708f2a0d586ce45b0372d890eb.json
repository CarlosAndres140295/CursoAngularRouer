{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { environment } from './../../environments/environment';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./../services/token.service\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, tokenService) {\n      this.http = http;\n      this.tokenService = tokenService;\n      this.apiUrl = `${environment.API_URL}/api/auth`;\n      this.userStatus = new BehaviorSubject(null);\n      this.userStatus$ = this.userStatus.asObservable();\n    }\n\n    login(email, password) {\n      return this.http.post(`${this.apiUrl}/login`, {\n        email,\n        password\n      }).pipe(tap(response => this.tokenService.saveToken(response.access_token)));\n    }\n\n    getProfile() {\n      return this.http.get(`${this.apiUrl}/profile`).pipe(tap(user => this.userStatus.next(user)));\n    }\n\n    loginAndGet(email, password) {\n      return this.login(email, password).pipe(switchMap(() => this.getProfile()));\n    }\n\n    logout() {\n      this.tokenService.removeToken();\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}