{"ast":null,"code":"import { RouterModule, Routes } from '@angular/router';\nimport { QuicklinkStrategy } from 'ngx-quicklink'; // Vistas\n\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { AdminGuard } from './guards/admin.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  loadChildren: () => import('./website/website.module').then(m => m.WebsiteModule),\n  data: {\n    preload: true\n  }\n}, {\n  path: 'cms',\n  canActivate: [AdminGuard],\n  loadChildren: () => import('./cms/cms.module').then(m => m.CmsModule)\n}, {\n  path: '**',\n  component: NotFoundComponent\n}];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {}\n\n  AppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n\n  AppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  AppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forRoot(routes, {\n      preloadingStrategy: QuicklinkStrategy // Precarga de modulos usar solo cuando la app no tenga tantos modulos con el servicio PreloadAllModules o el ser\n      // servicio creado como es el caso CustomPreloadService\n      // QuicklinkStrategy desarrollado por la comunidada npm i ngx-quicklink --save, se debe habilitar para cada modulo.ts\n\n    }), RouterModule]\n  });\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module"}