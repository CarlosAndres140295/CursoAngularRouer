{"ast":null,"code":"import { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../services/token.service\";\nimport * as i2 from \"./../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(tokenService, authService, router) {\n      this.tokenService = tokenService;\n      this.authService = authService;\n      this.router = router;\n    }\n\n    canActivate(route, state) {\n      // const token = this.tokenService.getToken();\n      // if (!token) {\n      //     this.router.navigate(['/home']);\n      //     return false;\n      // }\n      //  return true;\n      return this.authService.userStatus$.pipe(map(userStatus => {\n        if (!userStatus) {\n          this.router.navigate(['/home']);\n          return false;\n        }\n\n        return true;\n      }));\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.TokenService), i0.ɵɵinject(i2.AuthService), i0.ɵɵinject(i3.Router));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}